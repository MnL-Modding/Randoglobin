name: Build
on: push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
      - name: Install latest stable Rust
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: stable
      - name: Install dependencies
        run: |
          poetry install --no-interaction
      - name: Compile Rust modules
        run: |
          python3 -m rustimport build --release
      - name: Download armips (M&L Modding fork)
        run: |
          curl -LO --output-dir 'randoglobin/files' 'https://github.com/MnL-Modding/armips/releases/latest/download/armips${{ runner.os == 'Windows' && '.exe' || '' }}'
      - name: Build executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: randoglobin
          mode: app
          enable-plugins: pyside6
          user-package-configuration-file: "randoglobin.nuitka-package.config.yml"
          windows-console-mode: force
          windows-icon-from-ico: "randoglobin/files/randoglobin.ico"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
          include-hidden-files: true
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
